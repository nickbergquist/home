////////////////
//  palette   //
////////////////

@mixin background-plus-hover-colour($base-colour, $change: 5%) {
  background-color: $base-colour;

  &:hover {
    background-color: darken($base-colour, $change);
  }
}


///////////////
//  inputs   //
///////////////

@mixin button-theme(
  $colour: palette-colour($palette-mono, 'lighter'),
  $colour-text-hover: palette-colour($palette-mono, 'lighter'),
  $colour-background: palette-colour($palette-main, 'secondary'),
  $colour-background-hover: palette-colour($palette-main, 'primary'),
  $colour-border: palette-colour($palette-main, 'foreground')
  ) {
  background-color: $colour-background;
  border-color: $colour-border;
  box-shadow: -1px 1px 2px $edge-shadow-colour, palette-colour-alpha($palette-mono, 'lightest', 'dark') 0 1px 0 inset;
  color: $colour;

  &:focus {
    background-color: $colour-background-hover;
    color: $colour-text-hover;
  }

  &:hover {
    background-color: $colour-background-hover;
    color: $colour-text-hover;
  }
}

@mixin form-input-theme(
  $colour-border: $input-text-standard-border-colour,
  $colour-text-focus: $input-text-standard-border-focus-colour,
  $colour-background: $input-text-standard-background-colour
  ) {
  background-color: $colour-background;
  border-color: $colour-border;
  box-shadow: -10px 10px 0 $input-text-standard-shadow-colour;

  &:focus {
    border-color: $colour-text-focus;
    transition: border-color .5s ease 0s;
  }
}


//////////////////////
//  media queries   //
//////////////////////

@mixin mq-base {
  @media (max-width: #{map-get($breakpoints, 'small') - 1px}) {
    @content;
  }
}

@mixin mq-small {
  @media (min-width: #{map-get($breakpoints, 'small')}) {
    @content;
  }
}

@mixin mq-medium {
  @media (min-width: #{map-get($breakpoints, 'medium')}) {
    @content;
  }
}

@mixin mq-large {
  @media (min-width: #{map-get($breakpoints, 'large')}) {
    @content;
  }
}

@mixin mq-full {
  @media (min-width: #{map-get($breakpoints, 'full')}) {
    @content;
  }
}


//////////////////////
//  typographical   //
//////////////////////

@mixin font-face($family, $src, $style: normal, $weight: normal) {
  @font-face {
    font-display: auto;
    font-family: $family;
    font-style: $style;
    font-weight: $weight;
    src: url('#{$src}.eot?#iefix') format('embedded-opentype'), // IE8 and below
    url('#{$src}.woff') format('woff'), // standard
    url('#{$src}.ttf') format('truetype'), // Safari, Android, iOS
    url('#{$src}.svg##{$family}') format('svg'); // legacy iOS
  }
}


/// adds vertical spacing to headings determined by base typography of font size and leading.
/// @param $top-margin - set to 0 no top spacing and recalculated bottom spacing
@mixin heading-vertical-rhythm($font-size-px, $top-margin: null) {
  $font-size-rem: calc-rem($font-size-px);
  $single-vertical-margin: $base-typographical-height-unit / $font-size-px;

  // leading of heading is doubled for font sizes greater than the base typographical unit
  $heading-line-height: '';
  @if $font-size-px > $base-typographical-height-unit {
    $heading-line-height: $single-vertical-margin * 2;
  } @else {
    $heading-line-height: $single-vertical-margin;
  }

  $margin-bottom: ($single-vertical-margin) * .5;
  $margin-top: ($single-vertical-margin) * .5; // reduced multiplication factor to allow for bottom margins of preceding elements 

  font-size: #{$font-size-rem}#{'rem'};
  line-height: $heading-line-height;

  @if $top-margin == 0 {
    margin-bottom: #{$single-vertical-margin}#{'em'};
  } @else if $top-margin == null {
    margin-bottom: #{$margin-bottom}#{'em'};
    padding-top: #{$margin-top}#{'em'};
  }
}
